spring.application.name=server-app
server.port = 8080

# MySQL application properties 
spring.datasource.url=jdbc:mysql://localhost:3306/jewellerydb
spring.datasource.username=root
spring.datasource.password=rootuser
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT application properties
app.jwt.secret=M0eYB0R3R0ck5t0R3NC0wNzE4Nzc0NzQxLTgxNzI4NzQxLTIwMjEtMTEwMC0wMjAxNzIwMDAwLTQxNjE0ODQwMg
app.jwt.expirationMs=28800000

# Google OAuth2 properties
spring.security.oauth2.client.registration.google.client-id=104704098738-iff55kjh1aenvgo5k39ikdikebenptku.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
